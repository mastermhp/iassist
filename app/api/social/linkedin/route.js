// LinkedIn API integration
export async function POST(request) {
  try {
    const { content, imageUrl, personId, accessToken } = await request.json()

    if (!personId || !accessToken) {
      return Response.json(
        { error: "LinkedIn Person ID and Access Token are required. Please configure them in settings." },
        { status: 400 },
      )
    }

    const postData = {
      author: `urn:li:person:${personId}`,
      lifecycleState: "PUBLISHED",
      specificContent: {
        "com.linkedin.ugc.ShareContent": {
          shareCommentary: {
            text: content,
          },
          shareMediaCategory: imageUrl ? "IMAGE" : "NONE",
        },
      },
      visibility: {
        "com.linkedin.ugc.MemberNetworkVisibility": "PUBLIC",
      },
    }

    if (imageUrl) {
      postData.specificContent["com.linkedin.ugc.ShareContent"].media = [
        {
          status: "READY",
          description: {
            text: "Generated by AI Social Media Automation",
          },
          media: imageUrl,
          title: {
            text: "AI Generated Content",
          },
        },
      ]
    }

    const response = await fetch("https://api.linkedin.com/v2/ugcPosts", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${accessToken}`,
      },
      body: JSON.stringify(postData),
    })

    const data = await response.json()

    if (!response.ok) {
      throw new Error(data.message || "Failed to post to LinkedIn")
    }

    return Response.json({
      success: true,
      postId: data.id,
      platform: "linkedin",
      postedAt: new Date().toISOString(),
    })
  } catch (error) {
    console.error("LinkedIn posting error:", error)
    return Response.json({ error: error.message }, { status: 500 })
  }
}
